# Generated by Django 5.1.6 on 2025-03-11 11:19

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('distance', models.DecimalField(decimal_places=2, max_digits=8)),
                ('estimated_time', models.IntegerField()),
                ('fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('station_type', models.CharField(choices=[('bus', 'Bus Station'), ('brt', 'BRT Station'), ('both', 'Bus & BRT Station')], default='bus', max_length=4)),
                ('location', models.CharField(default='Dar es Salaam', max_length=200)),
                ('landmark_nearby', models.CharField(blank=True, max_length=200)),
                ('capacity', models.IntegerField(default=0)),
                ('is_operational', models.BooleanField(default=True)),
                ('opening_time', models.TimeField(default=datetime.time(6, 0))),
                ('closing_time', models.TimeField(default=datetime.time(22, 0))),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RouteStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('arrival_time', models.TimeField()),
                ('departure_time', models.TimeField()),
                ('stop_duration', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.route')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.station')),
            ],
            options={
                'ordering': ['route', 'order'],
                'unique_together': {('route', 'order'), ('route', 'station')},
            },
        ),
        migrations.AddField(
            model_name='route',
            name='stations',
            field=models.ManyToManyField(through='stations.RouteStation', to='stations.station'),
        ),
        migrations.CreateModel(
            name='StationTraffic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('hour', models.IntegerField()),
                ('passenger_count', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.station')),
            ],
            options={
                'unique_together': {('station', 'date', 'hour')},
            },
        ),
    ]
